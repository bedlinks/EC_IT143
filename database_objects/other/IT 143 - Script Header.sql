/*****************************************************************************************************************/

-- EC_IT143_W3.4_EBD -- AdventureWorks SQL Queries
-- Author: Ernest Baah Dwomoh
-- Date: 2025-03-22 
-- Estimated Runtime: Varies by query
-- Description: SQL script answering 8 selected questions from AdventureWorks

-- Question 1: Top five best-selling products by total quantity sold
SELECT TOP 5 p.Name AS ProductName, SUM(sod.OrderQty) AS TotalQuantitySold
FROM Sales.SalesOrderDetail sod
JOIN Production.Product p ON sod.ProductID = p.ProductID
GROUP BY p.Name
ORDER BY TotalQuantitySold DESC;

-- Question 2: Sales representatives with the highest total sales revenue
SELECT TOP 5 sp.BusinessEntityID, per.FirstName, per.LastName, SUM(soh.TotalDue) AS TotalSalesRevenue
FROM Sales.SalesPerson sp
JOIN Sales.SalesOrderHeader soh ON sp.BusinessEntityID = soh.SalesPersonID
JOIN Person.Person per ON sp.BusinessEntityID = per.BusinessEntityID
GROUP BY sp.BusinessEntityID, per.FirstName, per.LastName
ORDER BY TotalSalesRevenue DESC;

-- Question 3: Total revenue generated by each product category
SELECT pc.Name AS CategoryName, SUM(sod.LineTotal) AS TotalRevenue
FROM Sales.SalesOrderDetail sod
JOIN Production.Product p ON sod.ProductID = p.ProductID
JOIN Production.ProductSubcategory psc ON p.ProductSubcategoryID = psc.ProductSubcategoryID
JOIN Production.ProductCategory pc ON psc.ProductCategoryID = pc.ProductCategoryID
GROUP BY pc.Name
ORDER BY TotalRevenue DESC;

-- Question 4: Top five customers with most orders in the last year
SELECT TOP 5 c.CustomerID, per.FirstName, per.LastName, COUNT(soh.SalesOrderID) AS TotalOrders, SUM(soh.TotalDue) AS TotalRevenue
FROM Sales.Customer c
JOIN Sales.SalesOrderHeader soh ON c.CustomerID = soh.CustomerID
JOIN Person.Person per ON c.PersonID = per.BusinessEntityID
WHERE soh.OrderDate >= DATEADD(YEAR, -1, GETDATE())
GROUP BY c.CustomerID, per.FirstName, per.LastName
ORDER BY TotalOrders DESC;

-- Question 5: Sales trends for road bikes over the past five years
SELECT YEAR(soh.OrderDate) AS SalesYear, SUM(sod.OrderQty) AS TotalQuantitySold, SUM(sod.LineTotal) AS TotalRevenue, AVG(sod.LineTotal / sod.OrderQty) AS AvgSellingPrice
FROM Sales.SalesOrderDetail sod
JOIN Production.Product p ON sod.ProductID = p.ProductID
JOIN Sales.SalesOrderHeader soh ON sod.SalesOrderID = soh.SalesOrderID
WHERE p.Name LIKE '%Road Bike%'
GROUP BY YEAR(soh.OrderDate)
ORDER BY SalesYear DESC;

-- Question 6: Customers who purchased both mountain bikes and accessories in past 2 years
WITH Purchases AS (
    SELECT soh.CustomerID, pc.Name AS Category, SUM(sod.LineTotal) AS TotalSpent
    FROM Sales.SalesOrderDetail sod
    JOIN Production.Product p ON sod.ProductID = p.ProductID
    JOIN Production.ProductSubcategory psc ON p.ProductSubcategoryID = psc.ProductSubcategoryID
    JOIN Production.ProductCategory pc ON psc.ProductCategoryID = pc.ProductCategoryID
    JOIN Sales.SalesOrderHeader soh ON sod.SalesOrderID = soh.SalesOrderID
    WHERE soh.OrderDate >= DATEADD(YEAR, -2, GETDATE())
    GROUP BY soh.CustomerID, pc.Name
)
SELECT p1.CustomerID, p1.TotalSpent AS MountainBikeSpend, p2.TotalSpent AS AccessorySpend
FROM Purchases p1
JOIN Purchases p2 ON p1.CustomerID = p2.CustomerID
WHERE p1.Category = 'Mountain Bikes' AND p2.Category = 'Accessories';

-- Question 7: List all tables containing a column named 'CustomerID'
SELECT TABLE_SCHEMA, TABLE_NAME
FROM INFORMATION_SCHEMA.COLUMNS
WHERE COLUMN_NAME = 'CustomerID';

-- Question 8: Column names and data types of 'Sales.SalesOrderHeader'
SELECT COLUMN_NAME, DATA_TYPE
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'SalesOrderHeader' AND TABLE_SCHEMA = 'Sales';


SELECT GETDATE() AS my_date;
